/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import domain.*;
import dao.*;
import gui_helpers.SimpleListModel;
import java.awt.Window;
import java.util.ArrayList;
import java.util.Collection;
import javax.swing.JOptionPane;
import net.sf.oval.ConstraintViolation;
import net.sf.oval.Validator;
import net.sf.oval.exception.ConstraintsViolatedException;

/**
 *
 * @author tohfi140
 */
public class TutorEditor extends javax.swing.JDialog {

    private final TutorDAO dao;
    private final PaperDAO paperDAO;
    SimpleListModel tutorModel = new SimpleListModel();
    SimpleListModel tutorPaperModel = new SimpleListModel();
    Tutor tutor = new Tutor();

    /**
     * Creates new form TutorEditor
     */
    public TutorEditor(Window parent, boolean modal, TutorDAO dao, PaperDAO paperDAO) {
        super(parent);
        this.dao = dao;
        this.paperDAO = paperDAO;
        initComponents();

        //returns a collection of all the papers from the paper DAO
        Collection<String> paperCodes = paperDAO.getPaperCodes();

        //updates the tutor model with papercodes as new papers are added
        tutorModel.updateItems(paperCodes);

        listPapers.setModel(tutorModel);
        listTutorsPapers.setModel(tutorPaperModel);
        

    }

    public TutorEditor(Window parent, boolean modal, Tutor tutorToEdit, TutorDAO dao, PaperDAO paperDAO) {

        // delegate initialisation to other constructor
        this(parent, modal, dao, paperDAO);

        ArrayList<String> paperSelection = tutorToEdit.getPaper();

        //returns a collection of all the papers from the paper DAO
        Collection<String> paperCodes = paperDAO.getPaperCodes();

        paperCodes.removeAll(paperSelection);
        //updates the tutor model with papercodes as new papers are added
        tutorModel.updateItems(paperCodes);
        tutorPaperModel.updateItems(tutorToEdit.getPaper());
        listPapers.setModel(tutorModel);

        //tutorPaperModel.updateItems(paperSelection);
        listTutorsPapers.setModel(tutorPaperModel);

        // assign the student we are editing to the student feld
        this.tutor = tutorToEdit;

        // display tutors's details on the dialog
        txtID.setText(tutorToEdit.getTutor_ID());
        txtName.setText(tutorToEdit.getName());

        //listTutorsPapers.set
        txtEmail.setText(tutorToEdit.getEmail());
        txtDescription.setText(tutorToEdit.getDescription());

        // disable ID text field when editing
        txtID.setEnabled(false);
        
        int size = listTutorsPapers.getModel().getSize();

       // if (size == 0) { //Nobody's left, disable firing.
         //   btnDeletePaper.setEnabled(false);
       // }
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDescription = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPapers = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listTutorsPapers = new javax.swing.JList<>();
        btnDeletePaper = new javax.swing.JButton();
        btnAddPapers = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel4.setText("Tutor Name");
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText("Add Papers");
        jLabel5.setName("jLabel5"); // NOI18N

        txtEmail.setName("txtEmail"); // NOI18N
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        jLabel6.setText("Email");
        jLabel6.setName("jLabel6"); // NOI18N

        btnCancel.setText("Cancel");
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.setName("btnSave"); // NOI18N
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtName.setName("txtName"); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel7.setText("Description");
        jLabel7.setName("jLabel7"); // NOI18N

        txtDescription.setName("txtDescription"); // NOI18N
        txtDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescriptionActionPerformed(evt);
            }
        });

        jLabel8.setText("Tutor ID");
        jLabel8.setName("jLabel8"); // NOI18N

        txtID.setName("txtID"); // NOI18N
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Add Tutor");
        jLabel1.setName("jLabel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        listPapers.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listPapers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listPapers.setToolTipText("");
        listPapers.setName("listPapers"); // NOI18N
        jScrollPane1.setViewportView(listPapers);

        jLabel2.setText("Tutor's Papers");
        jLabel2.setName("jLabel2"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        listTutorsPapers.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listTutorsPapers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listTutorsPapers.setName("listTutorsPapers"); // NOI18N
        jScrollPane2.setViewportView(listTutorsPapers);

        btnDeletePaper.setText("Delete Paper");
        btnDeletePaper.setName("btnDeletePaper"); // NOI18N
        btnDeletePaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePaperActionPerformed(evt);
            }
        });

        btnAddPapers.setText("Add Paper");
        btnAddPapers.setName("btnAddPapers"); // NOI18N
        btnAddPapers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPapersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(96, 96, 96)
                                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel6))
                                        .addGap(21, 21, 21)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAddPapers))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDeletePaper)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddPapers))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeletePaper)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
       // TODO add your handling code here:
   }//GEN-LAST:event_txtEmailActionPerformed

   private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

       String id = txtID.getText();

       //ensure id does not already exist when adding a new tutor
       if (txtID.isEnabled() && dao.searchByID(txtID.getText()) != null) {
           // warn user
           JOptionPane.showMessageDialog(this,
                   "This ID already exists.",
                   "Input problem", JOptionPane.WARNING_MESSAGE);

           // do nothing else to prevent overwriting existing tutor
           return;
       }

       try {
           String name = txtName.getText();
           String email = txtEmail.getText();

           String description = txtDescription.getText();
           //adds the selected papers from the users to an arraylist to store the tutors papers
           //ArrayList<String> tutorsPapers;
           ArrayList list = new ArrayList(listTutorsPapers.getModel().getSize());
           //ArrayList<String> selectedPapers;

           //ensures a selection is made for tutors papers unless 
           if (listTutorsPapers.getModel().getSize() == 0 && listPapers.getSelectedValuesList().isEmpty()) {
               JOptionPane.showMessageDialog(this, "Please enter a paper selection", "Input Error", JOptionPane.INFORMATION_MESSAGE);
               return;
           } else {

             

               
               for (int i = 0; i < listTutorsPapers.getModel().getSize(); i++) {
                   list.add(listTutorsPapers.getModel().getElementAt(i));
               }

           }

           tutor.setTutor_ID(id);
           tutor.setName(name);
           tutor.setEmail(email);
           tutor.setPaper(list);
           tutor.setDescription(description);

           new Validator().assertValid(tutor);
           dao.saveTutor(tutor);
           dispose();

       } catch (NullPointerException ex) {
           JOptionPane.showMessageDialog(this,
                   "You have entered a price or quantity that is not a valid number.",
                   "Input Error", JOptionPane.ERROR_MESSAGE);
       } catch (ConstraintsViolatedException ex) {

           // get the violated constraints from the exception
           ConstraintViolation[] violations = ex.getConstraintViolations();

           // create a nice error message for the user
           String msg = "Please fix the following input problems:";
           for (ConstraintViolation cv : violations) {
               msg += "\n  - " + cv.getMessage();
           }

       }
   }//GEN-LAST:event_btnSaveActionPerformed

   private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
       // TODO add your handling code here:
       dispose();
   }//GEN-LAST:event_btnCancelActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescriptionActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void btnDeletePaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePaperActionPerformed
        // TODO add your handling code here:


        int selectedIndex = listTutorsPapers.getSelectedIndex();

        String deletedItem = listTutorsPapers.getSelectedValue();

        if (selectedIndex != -1) {
            //removes paper from tutors papers
            tutorPaperModel.removeElementAt(selectedIndex);
            //checks if tutor model is empty, if its not adds the item
            //if it is empty updates the model
            if(!(tutorModel.getSize() == 0)){
                tutorModel.addElement(deletedItem);
            }else{
                
                tutorModel.updateItems(deletedItem);
            
            }
            
        }
        


    }//GEN-LAST:event_btnDeletePaperActionPerformed

    private void btnAddPapersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPapersActionPerformed
        // TODO add your handling code here:

        //Collection<String> paperCodes = paperDAO.getPaperCodes();

        //btnAddPapers.addActionListener(this);
        int selectedIndex = listPapers.getSelectedIndex();
        //List<String> deletedItems = listTutorsPapers.getSelectedValuesList();
        String addedItem = (String)listPapers.getSelectedValue();

        
        if (selectedIndex != -1) {
            //removes paper from tutors papers
            tutorModel.removeElementAt(selectedIndex);

            //adds the deleted paper back into the add papers list
            
            //checks if tutor paper model is empty, if its not adds the item
            //if it is empty updates the model
            if(!(tutorPaperModel.getSize() == 0)){
                tutorPaperModel.addElement(addedItem);
            }else{
                tutorPaperModel.updateItems(addedItem);
        
        }
                    

        }
        int size = listPapers.getModel().getSize();

        if (size == 0) {
            btnAddPapers.setEnabled(false);
        }
 
    }//GEN-LAST:event_btnAddPapersActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPapers;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDeletePaper;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listPapers;
    private javax.swing.JList<String> listTutorsPapers;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
